($) : (a -> b) -> a -> b forall {a, b} =
    | f, a => f(a)

data FnWrapperA(A -> (), Option[FnWrapperA[A]]) forall { A }

a : FnWrapperA[True | False] = FnWrapperA(| _ => (), None)

b : FnWrapperA[True] -> () = | f => f._0(True)

c : FnWrapperA[FnWrapperA[True | False]] -> () = | f => f._0(a)

main : () -> () =
    | _ => do
        b.FnWrapperA(None).c
