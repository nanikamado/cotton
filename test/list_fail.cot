(.) : A -> (A -> B) -> B forall { A, B } =
    | a, f => f(a)

infixl 10 .

data a /\ b

infixl 3 /\

data a .. b

infixl 4 ..

type List = () | (A /\ List) forall { A }

range_to_list : (I64 .. I64) -> List[()] =
    | a .. b => (a < b).
        | True => a /\ ((a + 1)..b).range_to_list
        | False => ()

print_num_list : List[I64] -> () =
    | () => ()
    | h /\ t => do
        h.i64_to_string.println
        t.print_num_list

main : () -> () =
    | () => (0..100).range_to_list.print_num_list
